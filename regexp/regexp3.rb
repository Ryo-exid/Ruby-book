# 正規表現入門その3  https://qiita.com/jnchito/items/6f0c885c1c4929092578

=begin

スペースやタブ文字の入った空行を見つける

-------------------------------------------
def hello(name)
  puts "Hello, #{name}!"
end

hello('Alice')

hello('Bob')

hello('Carol')
-------------------------------------------

一見、何も問題無さそうに見えるが、実は空行の一部にスペースやタブ文字が含まれている


^ は「行頭」を表すメタ文字

^ + は「行頭からスペースが1文字以上続く」という意味

$ は ^ の反対で、「行末」を意味するメタ文字（アンカー）

^ +$ は「行頭から行末までスペースが1文字以上続く」という意味

タブ文字は \t というメタ文字（文字クラス）を使って表現可能

^[ \t]+$ という正規表現で隠れていたタグ文字まで発見


=end


text = <<-TEXT
def hello(name)
  puts "Hello, \#{name}!"
end

hello('Alice')

hello('Bob')

hello('Carol')
TEXT

puts text.gsub(/^[ \t]+$/, '') #=> （結果ではわかりにくいが）無駄なスペースやタブ文字を削除


=begin


\s というメタ文字：　半角スペースやタブ文字、改行文字など、目に見えない「空白文字全般」を表す文字クラス

不揃いなスペースを揃える
:\s*

Rubyの場合
\s = [ \t\r\n\f]
半角スペース（ ）、タブ文字（\t）、改行文字（\n）、復帰文字（\r）、改ページ文字（\f）だけ


ABC|DEF のように書くと、「文字列ABC、または文字列DEF」という OR条件 の意味


改行文字を削除

$ は「行末」を表すメタ文字だが、このままだと改行文字は含まれない。
$ の代わりに \n を指定すると、検索結果に改行文字も含まれるようになる。


^ は行頭を表す
$ は行末を表す
\t はタブ文字を表す
\n は改行文字を表す
\s は空白文字（スペース、タブ文字、改行文字等）を表す
ABC|DEF は「文字列ABCまたは文字列DEF」のOR条件を表す
改行コードは環境によって異なる場合がある
^ は行頭の意味になったり、[^ ] で否定の文字クラスの意味になったりする

=end
# 範囲（Range）

# 最初の値..最後の値（最後の値を含む）
# 最初の値...最後の値（最後の値を含まない）

# 1以上5以下
range = 1..5
p range.include?(0) # false


a = 'abcdef'
# 2文字目から4文字目までを抜き出す
p a[1..3] # "bdc"


puts '---------------------------'


# case文

# 年齢に応じて料金を判定するメソッド
def charge(age)
  case age
  # 0歳から5歳までの場合
  when 0..5
    0
  when 6..12
    300
  when 13..18
    600
  else
    1000
  end
end

p charge(3)
p charge(12)
p charge(16)
p charge(25)


puts '---------------------------'


# 範囲オブジェクトに対してto_aメソッドを呼び出すと、値が連続する配列を作成することが出来る
p (1..5).to_a
p (1...5).to_a

p ('a'..'e').to_a
p ('a'...'e').to_a


# []の中に*と範囲オブジェクトを書いても同じように配列を作れる
p [*1..9]
p [*1...9]


puts '---------------------------'


# 繰り返し処理

# stepメソッドを呼び出すと、値を増やす間隔を指定可能
numbers = []
(1..10).step(2) { |n| numbers << n }
p numbers


